{"ast":null,"code":"var _jsxFileName = \"/Users/lydiaadejumo/Documents/Learning and Development/React/01-starting-setup/src/Components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setfilteredYear] = useState(\"2021\");\n\n  const changeFilteredYear = selectedYear => {\n    setfilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.expenses.filter(expense => {\n    return expense.date.getFullYear() === Number(filteredYear);\n  });\n\n  const contentCheck = () => {\n    let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No expenses found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 26\n    }, this);\n\n    if (filteredExpenses > 0) {\n      expenseContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        expense: expense\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this));\n      console.log(expenseContent);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      setFilteredYear: changeFilteredYear,\n      selectedYear: filteredYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), contentCheck]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"BOPjswfypvK4/5e/yFSuOhqy5ok=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/lydiaadejumo/Documents/Learning and Development/React/01-starting-setup/src/Components/Expenses/Expenses.js"],"names":["React","useState","Card","ExpensesFilter","ExpenseItem","Expenses","props","filteredYear","setfilteredYear","changeFilteredYear","selectedYear","filteredExpenses","expenses","filter","expense","date","getFullYear","Number","contentCheck","expenseContent","map","id","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMQ,kBAAkB,GAAIC,YAAD,IAAkB;AAC3CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAuBC,OAAD,IAAa;AAC1D,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,OAA+BC,MAAM,CAACV,YAAD,CAA5C;AACD,GAFwB,CAAzB;;AAIA,QAAMW,YAAY,GAAG,MAAM;AACzB,QAAIC,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB;;AAEA,QAAIR,gBAAgB,GAAG,CAAvB,EAA0B;AACxBQ,MAAAA,cAAc,GAAGR,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACpC,QAAC,WAAD;AAA8B,QAAA,OAAO,EAAEA;AAAvC,SAAkBA,OAAO,CAACO,EAA1B;AAAA;AAAA;AAAA;AAAA,cADe,CAAjB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;AACD;AACF,GATD;;AAWA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,eAAe,EAAEV,kBADnB;AAEE,MAAA,YAAY,EAAEF;AAFhB;AAAA;AAAA;AAAA;AAAA,YADF,EAKGW,YALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA/BQb,Q;;KAAAA,Q;AAgCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\n\nfunction Expenses(props) {\n  const [filteredYear, setfilteredYear] = useState(\"2021\");\n\n  const changeFilteredYear = (selectedYear) => {\n    setfilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.expenses.filter((expense) => {\n    return expense.date.getFullYear() === Number(filteredYear);\n  });\n\n  const contentCheck = () => {\n    let expenseContent = <p>No expenses found.</p>;\n\n    if (filteredExpenses > 0) {\n      expenseContent = filteredExpenses.map((expense) => (\n        <ExpenseItem key={expense.id} expense={expense} />\n      ));\n      console.log(expenseContent);\n    }\n  };\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        setFilteredYear={changeFilteredYear}\n        selectedYear={filteredYear}\n      />\n      {contentCheck}\n    </Card>\n  );\n}\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}