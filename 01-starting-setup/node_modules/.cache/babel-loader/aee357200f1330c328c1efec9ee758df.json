{"ast":null,"code":"var _jsxFileName = \"/Users/lydiaadejumo/Documents/Learning and Development/React/01-starting-setup/src/Components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setfilteredYear] = useState(\"2021\");\n\n  const changeFilteredYear = selectedYear => {\n    setfilteredYear(selectedYear);\n  };\n\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 24\n  }, this);\n\n  if (filteredExpenses > 0) {\n    expenseContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      expense: expense\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this));\n    console.log(expenseContent);\n  }\n\n  const filteredExpenses = props.expenses.filter(expense => {\n    return expense.date.getFullYear() === Number(filteredYear);\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      setFilteredYear: changeFilteredYear,\n      selectedYear: filteredYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), expenseContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"BOPjswfypvK4/5e/yFSuOhqy5ok=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/lydiaadejumo/Documents/Learning and Development/React/01-starting-setup/src/Components/Expenses/Expenses.js"],"names":["React","useState","Card","ExpensesFilter","ExpenseItem","Expenses","props","filteredYear","setfilteredYear","changeFilteredYear","selectedYear","expenseContent","filteredExpenses","map","expense","id","console","log","expenses","filter","date","getFullYear","Number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMQ,kBAAkB,GAAIC,YAAD,IAAkB;AAC3CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACD,GAFD;;AAGA,MAAIC,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;;AAEA,MAAIC,gBAAgB,GAAG,CAAvB,EAA0B;AACxBD,IAAAA,cAAc,GAAGC,gBAAgB,CAACC,GAAjB,CAAsBC,OAAD,iBACpC,QAAC,WAAD;AAA8B,MAAA,OAAO,EAAEA;AAAvC,OAAkBA,OAAO,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,YADe,CAAjB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ;AACD;;AAED,QAAMC,gBAAgB,GAAGN,KAAK,CAACY,QAAN,CAAeC,MAAf,CAAuBL,OAAD,IAAa;AAC1D,WAAOA,OAAO,CAACM,IAAR,CAAaC,WAAb,OAA+BC,MAAM,CAACf,YAAD,CAA5C;AACD,GAFwB,CAAzB;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,eAAe,EAAEE,kBADnB;AAEE,MAAA,YAAY,EAAEF;AAFhB;AAAA;AAAA;AAAA;AAAA,YADF,EAKGI,cALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA5BQN,Q;;KAAAA,Q;AA6BT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\n\nfunction Expenses(props) {\n  const [filteredYear, setfilteredYear] = useState(\"2021\");\n\n  const changeFilteredYear = (selectedYear) => {\n    setfilteredYear(selectedYear);\n  };\n  let expenseContent = <p>No expenses found.</p>;\n\n  if (filteredExpenses > 0) {\n    expenseContent = filteredExpenses.map((expense) => (\n      <ExpenseItem key={expense.id} expense={expense} />\n    ));\n    console.log(expenseContent);\n  }\n\n  const filteredExpenses = props.expenses.filter((expense) => {\n    return expense.date.getFullYear() === Number(filteredYear);\n  });\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        setFilteredYear={changeFilteredYear}\n        selectedYear={filteredYear}\n      />\n      {expenseContent}\n    </Card>\n  );\n}\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}